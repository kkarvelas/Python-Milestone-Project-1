{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#### Print board function ####\n",
    "\n",
    "def board(a):\n",
    "    print('     |     |     ')\n",
    "    print('  '+a[6]+'  |  '+a[7]+'  |  '+a[8]+'  ')\n",
    "    print('     |     |     ')\n",
    "    print('-----------------')\n",
    "    print('     |     |     ')\n",
    "    print('  '+a[3]+'  |  '+a[4]+'  |  '+a[5]+'  ')\n",
    "    print('     |     |     ')\n",
    "    print('-----------------')\n",
    "    print('     |     |     ')\n",
    "    print('  '+a[0]+'  |  '+a[1]+'  |  '+a[2]+'  ')\n",
    "    print('     |     |     ')\n",
    "    print('\\n')\n",
    "\n",
    "    \n",
    "#### Check if input is valid (1-9) ####\n",
    "    \n",
    "def checkinput():\n",
    "\n",
    "    position = input()\n",
    "    \n",
    "    while position not in ['1', '2', '3', '4', '5', '6', '7', '8', '9']:\n",
    "        print(\"Please insert a valid position (1-9)\")\n",
    "        position = input()\n",
    "    return position\n",
    "\n",
    "\n",
    "#### Check if input is in a free cell ####\n",
    "\n",
    "def checkfreecell(elements,position,player):\n",
    "            \n",
    "    while elements[position] != ' ':\n",
    "        print('Please choose a free cell')\n",
    "        position = int(input())-1\n",
    "\n",
    "    elements[position] = player\n",
    "    \n",
    "\n",
    "\n",
    "#### Check for winning ####\n",
    "\n",
    "def checkresult(elements,position,player):\n",
    "    if elements[0]==elements[1]==elements[2] and (elements[0]=='X' or elements[0]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[3]==elements[4]==elements[5] and (elements[3]=='X' or elements[3]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[6]==elements[7]==elements[8] and (elements[6]=='X' or elements[6]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[0]==elements[4]==elements[8] and (elements[0]=='X' or elements[0]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[2]==elements[4]==elements[6] and (elements[2]=='X' or elements[2]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[6]==elements[3]==elements[0] and (elements[6]=='X' or elements[6]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[7]==elements[4]==elements[1] and (elements[7]=='X' or elements[7]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    elif elements[8]==elements[5]==elements[2] and (elements[8]=='X' or elements[8]=='O'):\n",
    "        print('Win')\n",
    "        return 1\n",
    "    else:\n",
    "        return 0\n",
    "\n",
    "    ##print('{} won the game'f.player)\n",
    "    \n",
    "#### Replay function ####\n",
    "\n",
    "\n",
    "def replay():\n",
    "    replay_game = input('Do you want to play again? (Yes/No)')\n",
    "    replay_game = replay_game.upper()\n",
    "    \n",
    "    while replay_game != 'YES' and replay_game != 'NO':\n",
    "        replay_game = input('Input should be \"Yes\" or \"No\")')\n",
    "    \n",
    "    \n",
    "    if replay_game == 'YES':\n",
    "        return replay_game\n",
    "    else:\n",
    "        print('Goodbye')\n",
    "        return replay_game\n",
    "\n",
    "\n",
    "############################################################################################################################\n",
    "\n",
    "player1 = input('Player 1 please pick marker \"X\" or \"O\"\\n')\n",
    "player1 = player1.upper()\n",
    "\n",
    "while player1 != 'X' and player1 != 'O': \n",
    "    player1 = input('Input should be \"X\" or \"O\"')\n",
    "    player1 = player1.upper()\n",
    "    \n",
    "\n",
    "if player1 == 'X': \n",
    "    player2 ='O' \n",
    "else: \n",
    "    player2 = 'X'\n",
    "\n",
    "print('Player 1 is '+ player1) \n",
    "print('Player 2 is '+ player2 +'\\n')\n",
    "again = 'YES'\n",
    "\n",
    "while again == 'YES':\n",
    "    elements = [' ',' ',' ',' ',' ',' ',' ',' ',' ']\n",
    "    counter = 1\n",
    "    board(elements)\n",
    "\n",
    "\n",
    "    while counter < 10: \n",
    "\n",
    "        if counter%2==1:\n",
    "            print('Player 1 please choose the position of your choise below with (1-9)\\n')\n",
    "            position = int(checkinput())-1\n",
    "            checkfreecell(elements,position,player1)\n",
    "            board(elements)\n",
    "            result = checkresult(elements,position,player1)\n",
    "            if result == 1:\n",
    "                again = replay()\n",
    "                break\n",
    "\n",
    "\n",
    "        else:\n",
    "            print('Player 2 please choose the position of your choise below with (1-9)\\n')\n",
    "            position = int(checkinput())-1 \n",
    "            checkfreecell(elements,position,player2)\n",
    "            board(elements)\n",
    "            result = checkresult(elements,position,player2)\n",
    "            if result == 1:\n",
    "                again = replay()\n",
    "                break\n",
    "\n",
    "        counter += 1\n",
    "    if counter ==10:\n",
    "        print('Game is Draw')\n",
    "        again = replay()\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
